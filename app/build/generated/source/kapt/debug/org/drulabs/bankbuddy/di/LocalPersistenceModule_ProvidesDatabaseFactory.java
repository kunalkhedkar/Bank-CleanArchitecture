// Generated by Dagger (https://google.github.io/dagger).
package org.drulabs.bankbuddy.di;

import android.app.Application;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import org.drulabs.bankbuddy.local.database.BankBuddyDB;

public final class LocalPersistenceModule_ProvidesDatabaseFactory implements Factory<BankBuddyDB> {
  private final LocalPersistenceModule module;

  private final Provider<Application> applicationProvider;

  public LocalPersistenceModule_ProvidesDatabaseFactory(
      LocalPersistenceModule module, Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public BankBuddyDB get() {
    return provideInstance(module, applicationProvider);
  }

  public static BankBuddyDB provideInstance(
      LocalPersistenceModule module, Provider<Application> applicationProvider) {
    return proxyProvidesDatabase(module, applicationProvider.get());
  }

  public static LocalPersistenceModule_ProvidesDatabaseFactory create(
      LocalPersistenceModule module, Provider<Application> applicationProvider) {
    return new LocalPersistenceModule_ProvidesDatabaseFactory(module, applicationProvider);
  }

  public static BankBuddyDB proxyProvidesDatabase(
      LocalPersistenceModule instance, Application application) {
    return Preconditions.checkNotNull(
        instance.providesDatabase(application),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
