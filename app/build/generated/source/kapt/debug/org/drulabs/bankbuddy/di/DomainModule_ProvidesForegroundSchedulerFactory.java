// Generated by Dagger (https://google.github.io/dagger).
package org.drulabs.bankbuddy.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import io.reactivex.Scheduler;

public final class DomainModule_ProvidesForegroundSchedulerFactory implements Factory<Scheduler> {
  private final DomainModule module;

  public DomainModule_ProvidesForegroundSchedulerFactory(DomainModule module) {
    this.module = module;
  }

  @Override
  public Scheduler get() {
    return provideInstance(module);
  }

  public static Scheduler provideInstance(DomainModule module) {
    return proxyProvidesForegroundScheduler(module);
  }

  public static DomainModule_ProvidesForegroundSchedulerFactory create(DomainModule module) {
    return new DomainModule_ProvidesForegroundSchedulerFactory(module);
  }

  public static Scheduler proxyProvidesForegroundScheduler(DomainModule instance) {
    return Preconditions.checkNotNull(
        instance.providesForegroundScheduler(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
