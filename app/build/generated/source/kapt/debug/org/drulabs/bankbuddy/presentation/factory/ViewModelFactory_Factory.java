// Generated by Dagger (https://google.github.io/dagger).
package org.drulabs.bankbuddy.presentation.factory;

import androidx.lifecycle.ViewModel;
import dagger.internal.Factory;
import java.util.Map;
import javax.inject.Provider;

public final class ViewModelFactory_Factory implements Factory<ViewModelFactory> {
  private final Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> arg0Provider;

  public ViewModelFactory_Factory(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> arg0Provider) {
    this.arg0Provider = arg0Provider;
  }

  @Override
  public ViewModelFactory get() {
    return provideInstance(arg0Provider);
  }

  public static ViewModelFactory provideInstance(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> arg0Provider) {
    return new ViewModelFactory(arg0Provider.get());
  }

  public static ViewModelFactory_Factory create(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> arg0Provider) {
    return new ViewModelFactory_Factory(arg0Provider);
  }

  public static ViewModelFactory newViewModelFactory(
      Map<Class<? extends ViewModel>, Provider<ViewModel>> arg0) {
    return new ViewModelFactory(arg0);
  }
}
