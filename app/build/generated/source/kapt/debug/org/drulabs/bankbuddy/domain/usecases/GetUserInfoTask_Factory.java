// Generated by Dagger (https://google.github.io/dagger).
package org.drulabs.bankbuddy.domain.usecases;

import dagger.internal.Factory;
import io.reactivex.Scheduler;
import javax.inject.Provider;
import org.drulabs.bankbuddy.domain.repository.BankingRepository;

public final class GetUserInfoTask_Factory implements Factory<GetUserInfoTask> {
  private final Provider<BankingRepository> arg0Provider;

  private final Provider<Scheduler> arg1Provider;

  private final Provider<Scheduler> arg2Provider;

  public GetUserInfoTask_Factory(
      Provider<BankingRepository> arg0Provider,
      Provider<Scheduler> arg1Provider,
      Provider<Scheduler> arg2Provider) {
    this.arg0Provider = arg0Provider;
    this.arg1Provider = arg1Provider;
    this.arg2Provider = arg2Provider;
  }

  @Override
  public GetUserInfoTask get() {
    return provideInstance(arg0Provider, arg1Provider, arg2Provider);
  }

  public static GetUserInfoTask provideInstance(
      Provider<BankingRepository> arg0Provider,
      Provider<Scheduler> arg1Provider,
      Provider<Scheduler> arg2Provider) {
    return new GetUserInfoTask(arg0Provider.get(), arg1Provider.get(), arg2Provider.get());
  }

  public static GetUserInfoTask_Factory create(
      Provider<BankingRepository> arg0Provider,
      Provider<Scheduler> arg1Provider,
      Provider<Scheduler> arg2Provider) {
    return new GetUserInfoTask_Factory(arg0Provider, arg1Provider, arg2Provider);
  }

  public static GetUserInfoTask newGetUserInfoTask(
      BankingRepository arg0, Scheduler arg1, Scheduler arg2) {
    return new GetUserInfoTask(arg0, arg1, arg2);
  }
}
